version: 0.2

env:
  variables:
    AWS_REGION: "ap-south-2"
    ECR_REPO: "nrl-internal"
    IMAGE_TAG: "latest"
    K8S_NAMESPACE: "default"
    AWS_ACCOUNT_ID: "090814668573"
    CLUSTER_NAME: "prod-nrl-nrl_internal"

phases:
  pre_build:
    commands:
      - echo "Checking out the code..."
      - git clone https://github.com/bhargavsiripurapu/app-Jenkins-eks-CI-CD.git
      - cd app-Jenkins-eks-CI-CD
      - echo "Logging in to Amazon ECR..."
      - |
        aws ecr get-login-password --region $AWS_REGION | \
        docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:
      - echo "Building the Docker image..."
      - |
        docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG \
        -f login-app/Dockerfile .
      - echo "Pushing the Docker image to ECR..."
      - |
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG

  post_build:
    commands:
      - echo "Updating Kubernetes deployment file with new image..."
      - |
        sed -i "s|image:.*|image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG|" deployment.yaml
      - echo "Updating kubeconfig for EKS cluster..."
      - |
        aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME
      - echo "Applying Kubernetes manifests..."
      - |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
        kubectl apply -f ingress.yaml
      - echo "Deployment completed successfully!"

artifacts:
  files:
    - deployment.yaml
    - service.yaml
    - ingress.yaml
