version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: 600941914653
    AWS_REGION: ap-south-1
    ECR_REGISTRY: 600941914653.dkr.ecr.ap-south-1.amazonaws.com
    ECR_REPOSITORY: adama_internal
    CLUSTER_NAME: prod-adama-Adama-internal
    DEPLOYMENT_FILE: deployment.yaml

phases:
  pre_build:
    commands:
      - echo "Checking project directory..."
      - pwd
      - ls -l  # Debugging
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
      - export IMAGE_TAG=$CODEBUILD_BUILD_NUMBER

  build:
    commands:
      - echo "Building Docker images..."
      - docker build --no-cache -t src-app:$IMAGE_TAG -f login-app/Dockerfile login-app/

      - echo "Listing built images..."
      - docker images  # Debugging step to verify built images

      - echo "Tagging images..."
      - docker tag src-app:$IMAGE_TAG "$ECR_REGISTRY/$ECR_REPOSITORY:app-$IMAGE_TAG"   # Corrected

  post_build:
    commands:
      - echo "Pushing Docker images to ECR..."
      - docker push "$ECR_REGISTRY/$ECR_REPOSITORY:app-$IMAGE_TAG"

      - echo "Updating deployment.yaml with new container images..."
      #sed -i 's@APP_IMAGE@'"$ECR_REGISTRY/$ECR_REPOSITORY:app-$IMAGE_TAG"'@' $DEPLOYMENT_FILE
      - sed -i 's@image: .*@image: '"$ECR_REGISTRY/$ECR_REPOSITORY:app-$IMAGE_TAG"'@' $DEPLOYMENT_FILE

      - echo "Displaying updated deployment.yaml..."
      - cat $DEPLOYMENT_FILE

      - echo "Configuring kubectl for EKS..."
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

      - echo "Deploying application to EKS..."
      - kubectl apply -f $DEPLOYMENT_FILE
      - kubectl apply -f service.yaml
      - kubectl apply -f ingress.yaml

artifacts:
  files:
    - deployment.yaml
    - service.yaml
    - ingress.yaml
