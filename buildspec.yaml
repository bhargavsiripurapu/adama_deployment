version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: 600941914653
    AWS_REGION: ap-south-1
    ECR_REPOSITORY: 600941914653.dkr.ecr.ap-south-1.amazonaws.com/adama_internal
    CLUSTER_NAME: prod-adama-Adama-internal
    DEPLOYMENT_FILE: deployment.yaml  # Deployment file name

phases:
  pre_build:
    commands:
      - echo "=== Logging in to Amazon ECR ==="
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:-latest}  # Fix: Ensure IMAGE_TAG is never empty
      - echo "Using Image Tag: $IMAGE_TAG"

  build:
    commands:
      - echo "=== Building Docker Image ==="
      - docker build -t adama_internal -f login-app/Dockerfile login-app/
      - docker tag adama_internal:latest $ECR_REPOSITORY:$IMAGE_TAG  # Fix: Ensure proper formatting

  post_build:
    commands:
      - echo "=== Pushing Docker Image to Amazon ECR ==="
      - docker push $ECR_REPOSITORY:$IMAGE_TAG

      - echo "=== Updating Deployment YAML ==="
      - sed -i "s@CONTAINER_IMAGE@$ECR_REPOSITORY:$IMAGE_TAG@g" $DEPLOYMENT_FILE

      - echo "=== Configuring kubectl for EKS ==="
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

      - echo "=== Deploying Application to EKS ==="
      - kubectl apply -f $DEPLOYMENT_FILE
      - kubectl apply -f service.yaml
      - kubectl apply -f ingress.yaml

artifacts:
  files:
    - deployment.yaml
    - service.yaml
    - ingress.yaml
